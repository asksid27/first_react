{"version":3,"sources":["Components/SignIn/SignIn.js","Components/Register/Register.js","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/Rank/Rank.js","Components/ImageLinkForm/ImageLinkForm.js","Components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","Components/Logo/logo.jpg"],"names":["SignIn","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","props","loadUser","onRouteChange","className","htmlFor","onChange","this","type","name","onClick","React","Component","Register","onNameChange","required","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","paddingTop","alt","src","logo","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","box","imageUrl","top","topRow","left","leftCol","right","rightCol","bottom","bottomRow","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","detect","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","boxDisplay","count","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4d2621e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value});\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value});\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://agile-brushlands-82994.herokuapp.com/signin', \r\n\t\t\t{ method: 'post', \r\n\t\t\t\theaders: {'Content-Type': 'application/json'}, \r\n\t\t\t\tbody: JSON.stringify({ \r\n\t\t\t\t\temail: this.state.signInEmail, \r\n\t\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(user => {\r\n\t\t\t\t\tif (user.id){\r\n\t\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.props.onRouteChange('signin');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n\t\t\t\t<main className='pa4 black-80'>\r\n\t\t\t\t\t<div className='measure'>\r\n\t\t\t\t\t\t<fieldset id='signup' className='ba b--transparent ph0 mh0'>\r\n\t\t\t\t\t\t\t<legend className='f1 fw6 ph0 mh0'>Sign In</legend>\r\n\t\t\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t\t\t<label className='db fw6 lh-copy f6' htmlFor='email-address'>Email</label>\r\n\t\t\t\t\t\t\t\t<input onChange={this.onEmailChange} className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='email' name='email-address' id='email-address' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='mv3'>\r\n\t\t\t\t\t\t\t\t<label className='db fw6 lh-copy f6' htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t\t<input onChange={this.onPasswordChange} className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='password' name='password' id='password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input onClick={ this.onSubmitSignIn} className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' type='submit' value='Sign In' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='lh-copy mt3'>\r\n\t\t\t\t\t\t\t<p onClick={() => this.props.onRouteChange('register')} className='f6 link dim black db pointer'>Register</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value});\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value});\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value});\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://agile-brushlands-82994.herokuapp.com/register', \r\n\t\t\t{ method: 'post', \r\n\t\t\t\theaders: {'Content-Type': 'application/json'}, \r\n\t\t\t\tbody: JSON.stringify({ \r\n\t\t\t\t\temail: this.state.email, \r\n\t\t\t\t\tpassword: this.state.password,\r\n\t\t\t\t\tname: this.state.name\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(user => {\r\n\t\t\t\t\tif(user.id) {\r\n\t\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.props.onRouteChange('signin');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n\t\t\t\t<main className='pa4 black-80'>\r\n\t\t\t\t\t<div className='measure'>\r\n\t\t\t\t\t\t<fieldset id='signup' className='ba b--transparent ph0 mh0'>\r\n\t\t\t\t\t\t\t<legend className='f1 fw6 ph0 mh0'>Register</legend>\r\n\t\t\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t\t\t<label className='db fw6 lh-copy f6' htmlFor='name'>Name</label>\r\n\t\t\t\t\t\t\t\t<input onChange={this.onNameChange} className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='text' name='name' id='name' required={true}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t\t\t<label className='db fw6 lh-copy f6' htmlFor='email-address'>Email</label>\r\n\t\t\t\t\t\t\t\t<input onChange={this.onEmailChange} className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='email' name='email-address' id='email-address' required/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='mv3'>\r\n\t\t\t\t\t\t\t\t<label className='db fw6 lh-copy f6' htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t\t<input onChange={this.onPasswordChange} className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='password' name='password' id='password' required/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input onClick={this.onSubmitSignIn} className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' type='submit' value='Register' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\tif(isSignedIn){\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n\telse{\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logo from './logo.jpg';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-5\" options={{ max : 65 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t\t<div className=\"Tilt-inner pa3\"><img style={{ paddingTop: '15px'}}alt='Logo' src={logo} /></div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`Hi ${name}, this is your ${entries} entry`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{'#1'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'We are going to detect face in an image through an API.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa3 br4 shadow-5'>\r\n\t\t\t\t\t<input type='text' className='f3 pa0 w-70 center' onChange={onInputChange}/>\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ box, imageUrl }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimg' alt='' src={imageUrl} width='500px' height='auto'/>\r\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, left: box.leftCol, right: box.rightCol, bottom: box.bottomRow}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true, \n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:3001/')\n  //     .then(response => response.json())\n  //     .then(console.log);\n  // }\n\n  calculateFaceLocation = (data) => {\n    const detect = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimg');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: detect.left_col * width,\n      topRow: detect.top_row * height,\n      rightCol: width - ( detect.right_col * width ),\n      bottomRow: height - ( detect.bottom_row * height )\n    }\n  }\n\n  boxDisplay = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n      fetch('https://agile-brushlands-82994.herokuapp.com/imageurl',{ \n        method: 'post', \n        headers: {'Content-Type': 'application/json'}, \n        body: JSON.stringify({ \n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if(response){\n          fetch('https://agile-brushlands-82994.herokuapp.com/image',\n            { method: 'put', \n              headers: {'Content-Type': 'application/json'}, \n              body: JSON.stringify({ \n                id: this.state.user.id\n              })\n            }\n          )\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count }))\n          })\n          .catch(err => console.log(err));\n        }\n      this.boxDisplay(this.calculateFaceLocation(response))\n    })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'home'){\n      this.setState({isSignedIn: true});\n      this.setState({route: route});\n    }  \n    else{\n      this.setState({isSignedIn: false});\n      this.setState(initialState);\n      this.setState({route: route});\n    }\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particleOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {\n        route === 'signin'\n        ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        : ( route === 'home'\n          ? \n            <div>\n              <Logo />\n              <Rank entries={this.state.user.entries} name={this.state.user.name} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          :\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4bba5300.jpg\";"],"sourceRoot":""}